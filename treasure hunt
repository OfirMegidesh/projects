import random


def quitGame():
    """
    the function is checking if the players want to quit the game
    :return: True or False as the answer of the player.
    """
    if input('if you want to quit enter Q').lower() == 'q':
        return True
    else:
        return False


def buildTheFile(path):
    """
    this function building the treasure file
    :param path: the file of the treasure
    :return: None
    """
    with open(path, 'w') as file:
        for i in range(10):
            i = str(i)
            file.write(i * random.randint(0, 20))
        file.write('TREASURE')
        for i in range(9, -1, -1):
            i = str(i)
            file.write(i * random.randint(0, 20))
    return


def theFirstMove(path):
    """
    The function is for the first move of the game, it's to determine the pointer value.
    :param path: the file of the game
    :return: that the move have entered
    """
    global pointer
    global value
    with open(path) as file:
        while True:
            try:
                step = int(input('please enter your move(-num if backward num if forward):'))
                if step < 0:
                    file.seek(0,2)
                    pointer = file.tell() + step
                else:
                    pointer = step
                file.seek(pointer)
                value = file.read()
                value = value[0]
                return 'your move was absorbed successfully'
            except ValueError:
                print('your input was incorrect')
            except IndexError:
                print('you are out of range')


def move(path):
    """
    :param path: the file of the board
    :return: when the move has been accomplished
    """
    global count
    global value
    global pointer
    with open(path) as file:
        step = int(input('please enter the number of steps(-num if backward num if forward)'))
        while True:
            try:
                count += 1
                pointer += step
                file.seek(pointer)
                value = file.read()
                value = value[0]
                return 'your move was absorbed successfully'
            except ValueError:
                print('your input was incorrect')
            except IndexError:
                print('you are out of range')


def moveValue():
    """
    the function checks what is the value of the move's location
    :return: True if it's a letter and False otherwise with a message to the player
    """
    if value.isdigit():
        print(f'hi {name} you\'ve reached {value} in {count} moves')
        return False
    if value.isalpha():
        print(f'{name} you\'ve won! congratulation you\'ve reached {value} in {count} moves')
        return True


def sortTop10(name):
    """
    the function sorts the top 10
    :param name:  the current name of the player
    :return: if the player is in the top 10
    """
    global lstWinner
    bool = False
    if len(lstWinner) != 0:
        for i in range(1, len(lstWinner), 2):
            if count < lstWinner[i]:
                lstWinner.insert(i - 1, name)
                lstWinner.insert(i, count)
                bool = True
                break
        if len(lstWinner) < 20 and bool == False:
            lstWinner.append(name)
            lstWinner.append(count)
            bool = True
        if len(lstWinner) > 20:
            for i in range(2):
                lstWinner.pop()
    else:
        lstWinner.append(name)
        lstWinner.append(count)
        bool = True
    print(lstWinner)
    if bool:
        print(f'congratulation {name} you\'ve reached the top 10 with {count} moves! ')
        return True
    print('we are sorry to inform you, but you\'ve not reached the top 10')
    return False


def createTop10File(path2):
    """
    the function create the file with the top10
    :param path2: the location of the file
    :return: a message
    """
    with open(path2, 'w+') as file2:
        for i in range(0, len(lstWinner), 2):
            file2.write(f'{lstWinner[i]}: {lstWinner[i + 1]}\n')
        return


lstWinner = []
while True:
    if quitGame():
        break
    path = r'C:\Users\eliav\Desktop\file.txt'
    path2 = r'C:\Users\eliav\Desktop\file2.txt'
    buildTheFile(path)
    count = 1
    name = input('please enter your name:')
    pointer = 0
    value = 0
    theFirstMove(path)
    if moveValue():
        if sortTop10(name):
            createTop10File(path2)
        continue
    while True:
        move(path)
        if moveValue():
            if sortTop10(name):
                createTop10File(path2)
            break
